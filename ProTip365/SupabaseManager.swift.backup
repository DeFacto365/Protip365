import Foundation
import Supabase

class SupabaseManager: ObservableObject {
    static let shared = SupabaseManager()
    
    let client = SupabaseClient(
        supabaseURL: URL(string: "https://wnuzxoehqqaeeycelvzm.supabase.co")!,
        supabaseKey: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6IndudXp4b2VocXFhZWV5Y2VsdnptIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMjM5NDksImV4cCI6MjA3MDY5OTk0OX0.g6ZkbbqwWknMkEGsLjbpYvkSMkRW5Gv70e3Q3H12QbI"
    )
    
    init() {}
    
    // MARK: - Employer Methods
    
    func fetchEmployers() async throws -> [Employer] {
        let response: [Employer] = try await client
            .from("employers")
            .select()
            .execute()
            .value
        
        return response
    }
    
    // MARK: - Shift Methods
    
    func saveShift(_ shift: Shift) async throws {
        try await client
            .from("shifts")
            .insert(shift)
            .execute()
    }
    
    func fetchShifts() async throws -> [Shift] {
        let response: [Shift] = try await client
            .from("shifts")
            .select()
            .execute()
            .value
        
        return response
    }
    
    // MARK: - Shift Income Methods
    
    func saveShiftIncome(_ shiftIncome: ShiftIncomeData) async throws {
        try await client
            .from("shift_income")
            .insert(shiftIncome)
            .execute()
    }
    
    func fetchShiftIncome() async throws -> [ShiftIncomeData] {
        let response: [ShiftIncomeData] = try await client
            .from("shift_income")
            .select()
            .execute()
            .value
        
        return response
    }
    
    func fetchShiftIncomeForDate(_ date: Date) async throws -> [ShiftIncomeData] {
        let formatter = DateFormatter()
        formatter.dateFormat = "yyyy-MM-dd"
        let dateString = formatter.string(from: date)
        
        let response: [ShiftIncomeData] = try await client
            .from("shift_income")
            .select()
            .eq("shift_date", value: dateString)
            .execute()
            .value
        
        return response
    }
}
